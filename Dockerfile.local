# Slightly modified version of next.js's with-docker Dockerfile
# https://github.com/vercel/next.js/blob/canary/examples/with-docker/Dockerfile

# Install dependencies only when needed
FROM node:20-alpine AS deps
# ENV NODE_ENV=production
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /opt
COPY . .
# COPY package.json package-lock.json ./
# RUN npm install --frozen-lockfile --network-concurrency 100 --network-timeout 100000
RUN npm install

# Rebuild the source code only when needed
FROM node:20-alpine AS builder
# ENV NODE_ENV=production
# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry.
# ENV NEXT_TELEMETRY_DISABLED 1
WORKDIR /opt
COPY . .
# COPY public ./public
# COPY app ./app
# COPY next.config.js ./
# COPY package.json package-lock.json ./
COPY --from=deps /opt/node_modules ./node_modules
RUN npm run build
CMD ["npm", "start"]

# # Production image, copy all the files and run next
# FROM node:20-alpine AS runner
# WORKDIR /opt
# ENV NODE_ENV=production
# # Uncomment the following line in case you want to disable telemetry during runtime.
# # ENV NEXT_TELEMETRY_DISABLED 1
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# # You only need to copy next.config.js if you are NOT using the default configuration
# COPY --from=builder /opt/next.config.js ./
# COPY --from=builder /opt/public ./
# COPY --from=builder /opt/package.json ./
# # COPY --from=builder --chown=nextjs:nodejs /opt/.next/standalone ./
# # COPY --from=builder --chown=nextjs:nodejs /opt/.next/static ./.next/static
# USER nextjs
# CMD ["npm", "start"]
# # CMD ["node", "server.js"]
